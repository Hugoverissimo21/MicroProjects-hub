library(readr)
library(dplyr)
library(yardstick)
# remove missing values
which(colSums(is.na(car_insurance)) != 0)
car_insurance <- read_csv("~/Desktop/Modeling Car Insurance Claim Outcomes/car_insurance.csv",
show_col_types = FALSE)
head(car_insurance)
# remove missing values
which(colSums(is.na(car_insurance)) != 0)
car_insurance$credit_score[is.na(car_insurance$credit_score)] <- mean(car_insurance$credit_score,
na.rm = TRUE)
car_insurance$annual_mileage[is.na(car_insurance$annual_mileage)] <- mean(car_insurance$annual_mileage,
na.rm = TRUE)
# features and their accuracies
data <- car_insurance |> select(- c(id, outcome))
features_df <- data.frame(features = names(data))
for (feature in names(data)) {
model <- glm(paste("outcome ~", feature), data = car_insurance, family = 'binomial')
# calculate accuracy
correct_predictions <- length(which(round(fitted(model)) == car_insurance$outcome))
total_predictions <- length(car_insurance$outcome)
accuracy <- correct_predictions / total_predictions
features_df$accuracies[features_df$features == feature] <- accuracy
}
features_df
library(readr)
library(dplyr)
library(yardstick)
# best_feature_df
best_feature_df <- data.frame(best_accuracy = max(features_df$accuracies))
# FALTA SO TIRAR O MAX VALOR DO FEATURE_DF E DEIXAR SO ESSA LINHA NA NOVA DF BEST_FEATURE_DF
# E VER A LIBRARYS Q FAZEM MESMO FALTA E QUAIS APAGAR
best_feature_df
# best_feature_df
best_feature_df <- data.frame(best_accuracy = max(features_df$accuracies))
# FALTA SO TIRAR O MAX VALOR DO FEATURE_DF E DEIXAR SO ESSA LINHA NA NOVA DF BEST_FEATURE_DF
best_feature_df$best_feature <- features_df$accuracies[features_df$features == feature]
# E VER A LIBRARYS Q FAZEM MESMO FALTA E QUAIS APAGAR
best_feature_df
# best_feature_df
best_feature_df <- data.frame(best_accuracy = max(features_df$accuracies))
# FALTA SO TIRAR O MAX VALOR DO FEATURE_DF E DEIXAR SO ESSA LINHA NA NOVA DF BEST_FEATURE_DF
best_feature_df$best_feature <- features_df$accuracies[features_df$features == best_feature_df$best_feature]
# best_feature_df
best_feature_df <- data.frame(best_accuracy = max(features_df$accuracies))
# FALTA SO TIRAR O MAX VALOR DO FEATURE_DF E DEIXAR SO ESSA LINHA NA NOVA DF BEST_FEATURE_DF
best_feature_df$best_feature <- features_df$accuracies[features_df$features == best_feature_df$best_accuracy]
# best_feature_df
best_feature_df <- data.frame(best_accuracy = max(features_df$accuracies))
# FALTA SO TIRAR O MAX VALOR DO FEATURE_DF E DEIXAR SO ESSA LINHA NA NOVA DF BEST_FEATURE_DF
best_feature_df$best_feature <- features_df$features[features_df$accuracies == best_feature_df$best_accuracy]
# E VER A LIBRARYS Q FAZEM MESMO FALTA E QUAIS APAGAR
best_feature_df
# best_feature_df
best_feature_df <- data.frame(best_accuracy = max(features_df$accuracies))
best_feature_df$best_feature <- features_df$features[features_df$accuracies == best_feature_df$best_accuracy]
# reorder columns because
best_feature_df <- best_feature_df |> select(c(best_feature, best_accuracy))
best_feature_df
